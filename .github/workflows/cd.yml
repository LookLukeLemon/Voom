name: Docker Image CD

on:
  pull_request_target:
    types:
      - closed

jobs:
  if_merged:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo The PR was merged

  SSH:
    needs: test
    runs-on: self-hosted

    steps:
      - name: permission
        run: |
          sudo chown -R $USER:$USER /home/ec2-user/actions-runner/_work/voom

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Rebase source from repo
        uses: appleboy/ssh-action@master

        with:
          command_timeout: 30m
          key: ${{ secrets.SSH_KEY }}
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          script: |
            cd actions-runner/_work/voom/voom
            git pull -r

      - name: Setting env
        run: |
          pwd
          echo "DEPLOY_ENV=${{ secrets.DEV_REALTIME_DEPLOY_ENV }}" >> apps/realtime/.env.development
          echo "PORT=${{ secrets.DEV_REALTIME_PORT }}" >> apps/realtime/.env.development
          echo "NEXT_PUBLIC_API_URL=${{ secrets.DEV_WEB_NEXT_PUBLIC_API_URL }}" >> apps/voom-web/.env.development
          echo "NEXT_PUBLIC_STUN_GOOGLE_LIST=${{ secrets.DEV_WEB_NEXT_PUBLIC_STUN_GOOGLE_LIST }}" >> apps/voom-web/.env.development

      - name: Restart
        run: |
          # 실행중인 컨테이너 종료
          docker-compose -f docker-compose.development.yaml down

          cp -R docker-compose.development.yaml docker-compose.yaml
          # 인증서 발급받고 싶은 경우
          # sh init-letsencrypt.sh

          # 서비스들 띄우기
          docker-compose -f docker-compose.development.yaml up --build -d
